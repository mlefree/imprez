/*
  A common approach is to use googleapis.com to generate css for the webfonts you want to use.
  The downside of this approach is that you have to be online. So below I have simply saved
  the output of the googleapis url into a file. Then you of course also have to make sure
  the webfonts are locally installed to make offline usage work. For Ubuntu (or Debian) I
  successfully used the script from here to do that: 
  http://www.webupd8.org/2011/01/automatically-install-all-google-web.html
*/

/* @import url(http://fonts.googleapis.com/css?family=Open+Sans:regular,semibold,italic,italicsemibold|PT+Sans:400,700,400italic,700italic|PT+Serif:400,700,400italic,700italic); */
@import url(fonts.css);



/*
    We display a fallback message for users with browsers that don't support
    all the features required by it. All of the content will be still fully 
    accessible for them, but some more advanced effects would be missing.
    When impress.js detects that browser supports all necessary CSS3 features, 
    the fallback-message style is hidden.
*/

.fallback-message {
    font-family: sans-serif;
    line-height: 1.3;

    width: 780px;
    padding: 10px 10px 0;
    margin: 20px auto;

    border: 1px solid #E4C652;
    border-radius: 10px;
    background: #EEDC94;
}

.fallback-message p {
    margin-bottom: 10px;
}

.impress-supported .fallback-message {
    display: none;
}


/*
  The body background is the bacgkround of "everything". Many
  impress.js tools call it the "surface". It could also be a
  picture or pattern, but we leave it as light gray.
*/

body {
    font-family: 'PT Sans', sans-serif;
    min-height: 740px;

    /* background: rgb(215, 215, 215); */
    background: #000;
}

/*
    Now let's style the presentation steps.
*/

/*
    Make inactive steps a little bit transparent.
*/
.impress-enabled .step {
    opacity: 0.2;
    transition:         opacity 2s;
}
.impress-enabled .step.active { 
    opacity: 1;
}

/*
    Speaker notes allow you to write comments within the steps, that will not 
    be displayed as part of the presentation. However, they will be picked up
    and displayed by impressConsole.js when integrated.
*/

.notes {
    display: none;
}

.step {
    margin: 0;
    display: block;

    width: 1300px;
    height: 700px;

    color: #6aaf4e;
    text-shadow: 0 2px 2px rgba(0, 0, 0, .1);

    font-family: 'Open Sans', Arial, sans-serif;
    font-size: 30px;
    letter-spacing: -1px;
    line-height: 1.7em;
}

.step h1, 
.step h2, 
.step h3 {
    color: #fff;
    margin-top: 0em;
    margin-bottom: 0em;
    text-decoration: underline;
}

.step p {
    text-align: center;
    margin: 0.7em;
}

.step li {
    margin: 0.2em;    
}

a {
    color: inherit;
    text-decoration: underline;
    padding: 0 0.1em;
    text-shadow: -1px 1px 2px rgba(100,100,100,0.9);
}
a:hover,
a:focus {
    background: rgba(40,40,40,1);
    text-shadow: -1px 1px 2px rgba(100,100,100,0.5);
    border-radius: 0.3em;
}

blockquote {
    font-family: 'PT Serif';
    font-style: italic;
    font-weight: 400;    
}

em {
    text-shadow: 0 2px 2px rgba(0, 0, 0, .3);    
}

strong {
    text-shadow: -1px 1px 2px rgba(100,100,100,0.5);
}

q {
    font-family: 'PT Serif';
    font-style: italic;
    font-weight: 400;    
    text-shadow: 0 2px 2px rgba(0, 0, 0, .3);
}

strike {
    opacity: 0.7;
}

small {
    font-size: 0.7em;
}


img {
    width: 600px
}

pre {
  margin-top: 0px;
  margin-bottom: 0px;
}

.step .right {
    float: right;
    margin-left:   40px;
    margin-right:   0px;
    margin-top:    20px;
    margin-bottom: 20px;
    right: 20px;
}
.step .left {
    float: left;
    margin-right:  40px;
    margin-left:    0px;
    margin-top:    20px;
    margin-bottom: 20px;
    left: 20px;
}
.step .top {
    position: absolute;
    top: 20px;
    margin-bottom:  20px;
    margin-top:      0px;    
}
.step .bottom {
    position: absolute;
    bottom: 20px;
    margin-bottom:   0px;
    margin-top:     20px;
}

/* Highlght.js mods */

/* Use a black square to hide opening curly brace, as if json doc continues from previous step. */
.impress-enabled .step img.black-square {
    width: 40px; 
    height: 50px; 
    position: absolute; 
    top: 39px; 
    z-index: 1;
    opacity: 1;
}

/* MongoDB and Javascript code needs to be way smaller font than regular "slide text" (which is json) */
.step .mongodb,
.step .javascript {
    font-size: 20px;
    line-height: 1.5em;
    letter-spacing: 1px;
}

/* Emphasize parts of code */
.em-code {
    letter-spacing: 3px;
    font-weight: bold;
    background-color: #113311;
    border-radius: 1em;
    padding: 5px;
}

/* 
    Specific styles for: .title slides 
*/

.title {
    background-image: url(../images/background-title.png);    
}

.title h1,
.title h2,
.title h3 {
    position: absolute;
    left: 45px; /* slide width is 900px, so this is like a 5% margin on both sides */
    width: 90%;
    text-align: center;    
}
.title h1 { top: 50px; }
.title h2 { top: 400px; }
.title h3 { top: 500px; }

/* 
    Overview slide 
*/

#overview .bottom {
    z-index: 5;
    font-size: 50%;
    background-color: #000;
    border: solid #000 20px;
}

/* Styles for animating the contents of a slide, such as a img, p, li or span element. ********/

/*
 fly-in class starts from a position outside the slide, then flies into it's correct position.
*/
.future .fly-in {
    transform: translateY(-700px);
    opacity: 0.0; /* Make it invisible, just so it doesn't clutter some other slide that might be in the position where we moved it */
}
.present .fly-in {
    transform:         translateY(0px);
    opacity: 1.0;
    transition:         2s;
}
.past .fly-out {
    transform:         translateY(700px);
    opacity: 0.0;
    transition:         2s;
}

/*
   Fade-in/out is a straightforward fade. Give it enough seconds that all browsers render it clearly.
*/
.future .fade-in {
    opacity: 0.0;
}
.present .fade-in {
    opacity: 1.0;
    transition: 3s;
}
.past .fade-out {
    opacity: 0.0;
    transition: 3s;
}
/*
    Zoom-in.
*/
.future  .zoom-in {
    transform:        scale(10);
    opacity: 0.0;    
}
.present .zoom-in {
    transform:         scale(1);
    opacity: 1.0;
    transition: 3s;
}
.past  .zoom-out {
    transform:        scale(10);
    opacity: 0.0;    
}

/*
  This version of impress.js supports plugins, and in particular, a UI plugin
  that allows easy navigation between steps.
*/
.impress-enabled #impress-navigation-ui {
    position: fixed;
    right: 1px;
    bottom: 1px;
    opacity: 0.6;
}
.impress-enabled #impress-navigation-ui.impress-navigation-ui-show {
    display: block;
}
.impress-enabled #impress-navigation-ui.impress-navigation-ui-hide {
    display: none;
}

/*
    And as the last thing there is a workaround for quite strange bug.
    It happens a lot in Chrome. I don't remember if I've seen it in Firefox.

    Sometimes the element positioned in 3D (especially when it's moved back
    along Z axis) is not clickable, because it falls 'behind' the <body>
    element.

    To prevent this, I decided to make <body> non clickable by setting
    pointer-events property to `none` value.
    Value if this property is inherited, so to make everything else clickable
    I bring it back on the #impress element.

    If you want to know more about `pointer-events` here are some docs:
    https://developer.mozilla.org/en/CSS/pointer-events

    There is one very important thing to notice about this workaround - it makes
    everything 'unclickable' except what's in #impress element.

    So use it wisely ... or don't use at all.
*/
.impress-enabled                          { pointer-events: none }
.impress-enabled #impress                 { pointer-events: auto }
.impress-enabled #impress-navigation-ui   { pointer-events: auto }
/* Disable pointer events for overview slide, except the links I added to it later. */
.impress-enabled #overview                { pointer-events: none }
.impress-enabled #overview a              { pointer-events: auto }


/*****************************************************************************************
 * Help popup
 * 
 * This is originally from hovercraft.js project. I found it helpful so have started to
 * integrate with all my impress.js presentations.
 */

.impress-enabled #impress-help {
    background: none repeat scroll 0 0 rgba(100, 100, 100, 0.5);
    color: #EEEEEE;
    font-size: 80%;
    left: 2em;
    bottom: 2em;
    width: 24em;
    border-radius: 1em;
    padding: 1em;
    position: fixed;
    right: 0;
    text-align: center;
    z-index: 100;
    display: block;
    font-family: Verdana, Arial, Sans;
}

.impress-enabled #impress-help.hide {
    display: none;
}
